// Copyright 2018 Yu Sheng Lin

// This file is part of MIMORI.

// MIMORI is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// MIMORI is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with MIMORI.  If not, see <http://www.gnu.org/licenses/>.

module RemapCacheSwapUnit5#(
	parameter BW=32
)(
	input [BW-1:0] i_data [32],
	input [12:0] i_flags,
	output logic [BW-1:0] o_data [32]
);

// Generated by Jinja2
logic [BW-1:0] l [14][32];

always_comb begin
	l[0] = i_data;
	if (i_flags[0]) begin
		l[1][0]=l[0][0];
		l[1][1]=l[0][2];
		l[1][2]=l[0][4];
		l[1][3]=l[0][6];
		l[1][4]=l[0][8];
		l[1][5]=l[0][10];
		l[1][6]=l[0][12];
		l[1][7]=l[0][14];
		l[1][8]=l[0][16];
		l[1][9]=l[0][18];
		l[1][10]=l[0][20];
		l[1][11]=l[0][22];
		l[1][12]=l[0][24];
		l[1][13]=l[0][26];
		l[1][14]=l[0][28];
		l[1][15]=l[0][30];
		l[1][16]=l[0][1];
		l[1][17]=l[0][3];
		l[1][18]=l[0][5];
		l[1][19]=l[0][7];
		l[1][20]=l[0][9];
		l[1][21]=l[0][11];
		l[1][22]=l[0][13];
		l[1][23]=l[0][15];
		l[1][24]=l[0][17];
		l[1][25]=l[0][19];
		l[1][26]=l[0][21];
		l[1][27]=l[0][23];
		l[1][28]=l[0][25];
		l[1][29]=l[0][27];
		l[1][30]=l[0][29];
		l[1][31]=l[0][31];
	end else begin
		l[1] = l[0];
	end
	if (i_flags[1]) begin
		l[2][0]=l[1][0];
		l[2][1]=l[1][4];
		l[2][2]=l[1][8];
		l[2][3]=l[1][12];
		l[2][4]=l[1][16];
		l[2][5]=l[1][20];
		l[2][6]=l[1][24];
		l[2][7]=l[1][28];
		l[2][8]=l[1][1];
		l[2][9]=l[1][5];
		l[2][10]=l[1][9];
		l[2][11]=l[1][13];
		l[2][12]=l[1][17];
		l[2][13]=l[1][21];
		l[2][14]=l[1][25];
		l[2][15]=l[1][29];
		l[2][16]=l[1][2];
		l[2][17]=l[1][6];
		l[2][18]=l[1][10];
		l[2][19]=l[1][14];
		l[2][20]=l[1][18];
		l[2][21]=l[1][22];
		l[2][22]=l[1][26];
		l[2][23]=l[1][30];
		l[2][24]=l[1][3];
		l[2][25]=l[1][7];
		l[2][26]=l[1][11];
		l[2][27]=l[1][15];
		l[2][28]=l[1][19];
		l[2][29]=l[1][23];
		l[2][30]=l[1][27];
		l[2][31]=l[1][31];
	end else begin
		l[2] = l[1];
	end
	if (i_flags[2]) begin
		l[3][0]=l[2][0];
		l[3][1]=l[2][1];
		l[3][2]=l[2][2];
		l[3][3]=l[2][3];
		l[3][4]=l[2][4];
		l[3][5]=l[2][5];
		l[3][6]=l[2][6];
		l[3][7]=l[2][7];
		l[3][8]=l[2][16];
		l[3][9]=l[2][17];
		l[3][10]=l[2][18];
		l[3][11]=l[2][19];
		l[3][12]=l[2][20];
		l[3][13]=l[2][21];
		l[3][14]=l[2][22];
		l[3][15]=l[2][23];
		l[3][16]=l[2][8];
		l[3][17]=l[2][9];
		l[3][18]=l[2][10];
		l[3][19]=l[2][11];
		l[3][20]=l[2][12];
		l[3][21]=l[2][13];
		l[3][22]=l[2][14];
		l[3][23]=l[2][15];
		l[3][24]=l[2][24];
		l[3][25]=l[2][25];
		l[3][26]=l[2][26];
		l[3][27]=l[2][27];
		l[3][28]=l[2][28];
		l[3][29]=l[2][29];
		l[3][30]=l[2][30];
		l[3][31]=l[2][31];
	end else begin
		l[3] = l[2];
	end
	if (i_flags[3]) begin
		l[4][0]=l[3][0];
		l[4][1]=l[3][1];
		l[4][2]=l[3][2];
		l[4][3]=l[3][3];
		l[4][4]=l[3][8];
		l[4][5]=l[3][9];
		l[4][6]=l[3][10];
		l[4][7]=l[3][11];
		l[4][8]=l[3][16];
		l[4][9]=l[3][17];
		l[4][10]=l[3][18];
		l[4][11]=l[3][19];
		l[4][12]=l[3][24];
		l[4][13]=l[3][25];
		l[4][14]=l[3][26];
		l[4][15]=l[3][27];
		l[4][16]=l[3][4];
		l[4][17]=l[3][5];
		l[4][18]=l[3][6];
		l[4][19]=l[3][7];
		l[4][20]=l[3][12];
		l[4][21]=l[3][13];
		l[4][22]=l[3][14];
		l[4][23]=l[3][15];
		l[4][24]=l[3][20];
		l[4][25]=l[3][21];
		l[4][26]=l[3][22];
		l[4][27]=l[3][23];
		l[4][28]=l[3][28];
		l[4][29]=l[3][29];
		l[4][30]=l[3][30];
		l[4][31]=l[3][31];
	end else begin
		l[4] = l[3];
	end
	if (i_flags[4]) begin
		l[5][0]=l[4][0];
		l[5][1]=l[4][1];
		l[5][2]=l[4][2];
		l[5][3]=l[4][3];
		l[5][4]=l[4][16];
		l[5][5]=l[4][17];
		l[5][6]=l[4][18];
		l[5][7]=l[4][19];
		l[5][8]=l[4][4];
		l[5][9]=l[4][5];
		l[5][10]=l[4][6];
		l[5][11]=l[4][7];
		l[5][12]=l[4][20];
		l[5][13]=l[4][21];
		l[5][14]=l[4][22];
		l[5][15]=l[4][23];
		l[5][16]=l[4][8];
		l[5][17]=l[4][9];
		l[5][18]=l[4][10];
		l[5][19]=l[4][11];
		l[5][20]=l[4][24];
		l[5][21]=l[4][25];
		l[5][22]=l[4][26];
		l[5][23]=l[4][27];
		l[5][24]=l[4][12];
		l[5][25]=l[4][13];
		l[5][26]=l[4][14];
		l[5][27]=l[4][15];
		l[5][28]=l[4][28];
		l[5][29]=l[4][29];
		l[5][30]=l[4][30];
		l[5][31]=l[4][31];
	end else begin
		l[5] = l[4];
	end
	if (i_flags[5]) begin
		l[6][0]=l[5][0];
		l[6][1]=l[5][2];
		l[6][2]=l[5][4];
		l[6][3]=l[5][6];
		l[6][4]=l[5][8];
		l[6][5]=l[5][10];
		l[6][6]=l[5][12];
		l[6][7]=l[5][14];
		l[6][8]=l[5][16];
		l[6][9]=l[5][18];
		l[6][10]=l[5][20];
		l[6][11]=l[5][22];
		l[6][12]=l[5][24];
		l[6][13]=l[5][26];
		l[6][14]=l[5][28];
		l[6][15]=l[5][30];
		l[6][16]=l[5][1];
		l[6][17]=l[5][3];
		l[6][18]=l[5][5];
		l[6][19]=l[5][7];
		l[6][20]=l[5][9];
		l[6][21]=l[5][11];
		l[6][22]=l[5][13];
		l[6][23]=l[5][15];
		l[6][24]=l[5][17];
		l[6][25]=l[5][19];
		l[6][26]=l[5][21];
		l[6][27]=l[5][23];
		l[6][28]=l[5][25];
		l[6][29]=l[5][27];
		l[6][30]=l[5][29];
		l[6][31]=l[5][31];
	end else begin
		l[6] = l[5];
	end
	if (i_flags[6]) begin
		l[7][0]=l[6][0];
		l[7][1]=l[6][4];
		l[7][2]=l[6][8];
		l[7][3]=l[6][12];
		l[7][4]=l[6][16];
		l[7][5]=l[6][20];
		l[7][6]=l[6][24];
		l[7][7]=l[6][28];
		l[7][8]=l[6][1];
		l[7][9]=l[6][5];
		l[7][10]=l[6][9];
		l[7][11]=l[6][13];
		l[7][12]=l[6][17];
		l[7][13]=l[6][21];
		l[7][14]=l[6][25];
		l[7][15]=l[6][29];
		l[7][16]=l[6][2];
		l[7][17]=l[6][6];
		l[7][18]=l[6][10];
		l[7][19]=l[6][14];
		l[7][20]=l[6][18];
		l[7][21]=l[6][22];
		l[7][22]=l[6][26];
		l[7][23]=l[6][30];
		l[7][24]=l[6][3];
		l[7][25]=l[6][7];
		l[7][26]=l[6][11];
		l[7][27]=l[6][15];
		l[7][28]=l[6][19];
		l[7][29]=l[6][23];
		l[7][30]=l[6][27];
		l[7][31]=l[6][31];
	end else begin
		l[7] = l[6];
	end
	if (i_flags[7]) begin
		l[8][0]=l[7][0];
		l[8][1]=l[7][16];
		l[8][2]=l[7][1];
		l[8][3]=l[7][17];
		l[8][4]=l[7][2];
		l[8][5]=l[7][18];
		l[8][6]=l[7][3];
		l[8][7]=l[7][19];
		l[8][8]=l[7][4];
		l[8][9]=l[7][20];
		l[8][10]=l[7][5];
		l[8][11]=l[7][21];
		l[8][12]=l[7][6];
		l[8][13]=l[7][22];
		l[8][14]=l[7][7];
		l[8][15]=l[7][23];
		l[8][16]=l[7][8];
		l[8][17]=l[7][24];
		l[8][18]=l[7][9];
		l[8][19]=l[7][25];
		l[8][20]=l[7][10];
		l[8][21]=l[7][26];
		l[8][22]=l[7][11];
		l[8][23]=l[7][27];
		l[8][24]=l[7][12];
		l[8][25]=l[7][28];
		l[8][26]=l[7][13];
		l[8][27]=l[7][29];
		l[8][28]=l[7][14];
		l[8][29]=l[7][30];
		l[8][30]=l[7][15];
		l[8][31]=l[7][31];
	end else begin
		l[8] = l[7];
	end
	if (i_flags[8]) begin
		l[9][0]=l[8][1];
		l[9][1]=l[8][0];
		l[9][2]=l[8][3];
		l[9][3]=l[8][2];
		l[9][4]=l[8][5];
		l[9][5]=l[8][4];
		l[9][6]=l[8][7];
		l[9][7]=l[8][6];
		l[9][8]=l[8][9];
		l[9][9]=l[8][8];
		l[9][10]=l[8][11];
		l[9][11]=l[8][10];
		l[9][12]=l[8][13];
		l[9][13]=l[8][12];
		l[9][14]=l[8][15];
		l[9][15]=l[8][14];
		l[9][16]=l[8][17];
		l[9][17]=l[8][16];
		l[9][18]=l[8][19];
		l[9][19]=l[8][18];
		l[9][20]=l[8][21];
		l[9][21]=l[8][20];
		l[9][22]=l[8][23];
		l[9][23]=l[8][22];
		l[9][24]=l[8][25];
		l[9][25]=l[8][24];
		l[9][26]=l[8][27];
		l[9][27]=l[8][26];
		l[9][28]=l[8][29];
		l[9][29]=l[8][28];
		l[9][30]=l[8][31];
		l[9][31]=l[8][30];
	end else begin
		l[9] = l[8];
	end
	if (i_flags[9]) begin
		l[10][0]=l[9][2];
		l[10][1]=l[9][3];
		l[10][2]=l[9][0];
		l[10][3]=l[9][1];
		l[10][4]=l[9][6];
		l[10][5]=l[9][7];
		l[10][6]=l[9][4];
		l[10][7]=l[9][5];
		l[10][8]=l[9][10];
		l[10][9]=l[9][11];
		l[10][10]=l[9][8];
		l[10][11]=l[9][9];
		l[10][12]=l[9][14];
		l[10][13]=l[9][15];
		l[10][14]=l[9][12];
		l[10][15]=l[9][13];
		l[10][16]=l[9][18];
		l[10][17]=l[9][19];
		l[10][18]=l[9][16];
		l[10][19]=l[9][17];
		l[10][20]=l[9][22];
		l[10][21]=l[9][23];
		l[10][22]=l[9][20];
		l[10][23]=l[9][21];
		l[10][24]=l[9][26];
		l[10][25]=l[9][27];
		l[10][26]=l[9][24];
		l[10][27]=l[9][25];
		l[10][28]=l[9][30];
		l[10][29]=l[9][31];
		l[10][30]=l[9][28];
		l[10][31]=l[9][29];
	end else begin
		l[10] = l[9];
	end
	if (i_flags[10]) begin
		l[11][0]=l[10][4];
		l[11][1]=l[10][5];
		l[11][2]=l[10][6];
		l[11][3]=l[10][7];
		l[11][4]=l[10][0];
		l[11][5]=l[10][1];
		l[11][6]=l[10][2];
		l[11][7]=l[10][3];
		l[11][8]=l[10][12];
		l[11][9]=l[10][13];
		l[11][10]=l[10][14];
		l[11][11]=l[10][15];
		l[11][12]=l[10][8];
		l[11][13]=l[10][9];
		l[11][14]=l[10][10];
		l[11][15]=l[10][11];
		l[11][16]=l[10][20];
		l[11][17]=l[10][21];
		l[11][18]=l[10][22];
		l[11][19]=l[10][23];
		l[11][20]=l[10][16];
		l[11][21]=l[10][17];
		l[11][22]=l[10][18];
		l[11][23]=l[10][19];
		l[11][24]=l[10][28];
		l[11][25]=l[10][29];
		l[11][26]=l[10][30];
		l[11][27]=l[10][31];
		l[11][28]=l[10][24];
		l[11][29]=l[10][25];
		l[11][30]=l[10][26];
		l[11][31]=l[10][27];
	end else begin
		l[11] = l[10];
	end
	if (i_flags[11]) begin
		l[12][0]=l[11][8];
		l[12][1]=l[11][9];
		l[12][2]=l[11][10];
		l[12][3]=l[11][11];
		l[12][4]=l[11][12];
		l[12][5]=l[11][13];
		l[12][6]=l[11][14];
		l[12][7]=l[11][15];
		l[12][8]=l[11][0];
		l[12][9]=l[11][1];
		l[12][10]=l[11][2];
		l[12][11]=l[11][3];
		l[12][12]=l[11][4];
		l[12][13]=l[11][5];
		l[12][14]=l[11][6];
		l[12][15]=l[11][7];
		l[12][16]=l[11][24];
		l[12][17]=l[11][25];
		l[12][18]=l[11][26];
		l[12][19]=l[11][27];
		l[12][20]=l[11][28];
		l[12][21]=l[11][29];
		l[12][22]=l[11][30];
		l[12][23]=l[11][31];
		l[12][24]=l[11][16];
		l[12][25]=l[11][17];
		l[12][26]=l[11][18];
		l[12][27]=l[11][19];
		l[12][28]=l[11][20];
		l[12][29]=l[11][21];
		l[12][30]=l[11][22];
		l[12][31]=l[11][23];
	end else begin
		l[12] = l[11];
	end
	if (i_flags[12]) begin
		l[13][0]=l[12][16];
		l[13][1]=l[12][17];
		l[13][2]=l[12][18];
		l[13][3]=l[12][19];
		l[13][4]=l[12][20];
		l[13][5]=l[12][21];
		l[13][6]=l[12][22];
		l[13][7]=l[12][23];
		l[13][8]=l[12][24];
		l[13][9]=l[12][25];
		l[13][10]=l[12][26];
		l[13][11]=l[12][27];
		l[13][12]=l[12][28];
		l[13][13]=l[12][29];
		l[13][14]=l[12][30];
		l[13][15]=l[12][31];
		l[13][16]=l[12][0];
		l[13][17]=l[12][1];
		l[13][18]=l[12][2];
		l[13][19]=l[12][3];
		l[13][20]=l[12][4];
		l[13][21]=l[12][5];
		l[13][22]=l[12][6];
		l[13][23]=l[12][7];
		l[13][24]=l[12][8];
		l[13][25]=l[12][9];
		l[13][26]=l[12][10];
		l[13][27]=l[12][11];
		l[13][28]=l[12][12];
		l[13][29]=l[12][13];
		l[13][30]=l[12][14];
		l[13][31]=l[12][15];
	end else begin
		l[13] = l[12];
	end
	o_data = l[13];
end

endmodule
